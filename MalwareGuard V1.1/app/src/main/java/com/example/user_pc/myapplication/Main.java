    package com.example.user_pc.myapplication;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TabHost;
import android.widget.TextView;
import java.net.Socket;
import java.io.IOException;
import java.net.UnknownHostException;

import android.util.Log;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
public class Main extends ActionBarActivity {

    TextView text;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        TabHost tabHost = (TabHost) findViewById(R.id.tabHost);

        text= (TextView) findViewById(R.id.serverMsg);
        text.setText("");

        // Create Tabs
        tabHost.setup();
        //1st tab - HomeTab
        TabHost.TabSpec tabSpec = tabHost.newTabSpec("home");
        tabSpec.setContent(R.id.Home);
        tabSpec.setIndicator("Home");
        tabHost.addTab(tabSpec);
        //2nd tab - HistoryTab
        tabSpec = tabHost.newTabSpec("history");
        tabSpec.setContent(R.id.History);
        tabSpec.setIndicator("History");
        tabHost.addTab(tabSpec);
        //3rd tab - HistoryTab
        tabSpec = tabHost.newTabSpec("options");
        tabSpec.setContent(R.id.Options);
        tabSpec.setIndicator("Options");
        tabHost.addTab(tabSpec);


        Button connect = (Button) findViewById(R.id.Connect_Button);
        connect.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v)
            {
                new Connect().execute();
            }
        }
        );

        Button scan =(Button)findViewById(R.id.scanBotton);
        scan.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v)
            {
                Intent i =new Intent(Main.this,scanActivity.class);
                startActivity(i);
            }

        }

        );

    }



    private class Connect extends AsyncTask<Void,Connect.Wrapper,Void>
    {

        public class Wrapper
        {
            public int state;// A flag which indicates about the proper message to display in the textView
            public String message;
        }

        @Override
        protected Void doInBackground(Void ...params)
        {
            Socket sock = null;
            String dstIP = getIp();//server ip
            int dstPort = 5656;
            ObjectInputStream clientIn = null;
            ObjectOutputStream clientOut = null;
            String message = null;

            Wrapper w=new Wrapper();


            //create socket
            try {
                sock = new Socket(dstIP, dstPort);
            } catch (UnknownHostException ie) {
                Log.wtf("UnknownHostException", ie);
            } catch (IOException ie) {
                Log.wtf("IOException", ie);
            }

            //create in & out stream
            try
            {
                clientIn= new ObjectInputStream(sock.getInputStream());
                clientOut =new ObjectOutputStream(sock.getOutputStream());
            }
            catch(IOException ie)
            {
                Log.e("streaming","failed");
            }

            //sent a message to server
            message="Hello, I'm the client";


            try
            {
                clientOut.writeObject(message);
            }
            catch(IOException ie)
            {
                Log.e("sending","failed");
            }
            //get a message from server
            message=null;
            try
            {
                message= (String) clientIn.readObject();
                w.message=message;
            }

            catch(IOException ie)
            {
                Log.e("receiving","failed");
            }
            catch(ClassNotFoundException ie)
            {
                Log.e("receiving","failed");
            }
            w.state=1;
            publishProgress(w);

            //closing streams & socket
            w.state=2;
            publishProgress(w);
            try
            {
                clientIn.close();
                clientOut.close();
                sock.close();
            }
            catch(IOException ie)
            {
                Log.e("disconnecting","failed");
            }

            return null;
        }
        @Override
        protected void onProgressUpdate(Wrapper...w)
        {
            switch (w[0].state)
            {
                case 1:
                    //print server message
                    text.setText(w[0].message);
                    /*
                    DELAY!!!
                    */


                    break;
                case 2:
                    //closing streams & socket
                    text.setText("client Disconnecting...");
                    break;
            }
        }

        @Override
        protected void onPostExecute(Void result)
        {

        }

        // function that get the ip address of the server from the user
        protected String getIp()
        {
            String ipAddress;
            EditText ipGetted = (EditText) findViewById(R.id.EditGetIp);
            ipAddress = ipGetted.getText().toString();
            return ipAddress;
        }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
