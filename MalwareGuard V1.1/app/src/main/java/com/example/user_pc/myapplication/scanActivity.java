package com.example.user_pc.myapplication;

import android.content.Intent;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;

import android.app.Activity;
import android.content.Context;
import android.graphics.Path;
import android.os.Environment;
import android.view.View;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class scanActivity extends ActionBarActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_scan);
        Intent i=getIntent();
    }



        // create an SHA-256 signature from binary file bytes
        public static byte[] SHA256(byte[] md5) {
            try {
                java.security.MessageDigest md = java.security.MessageDigest.getInstance("SHA-256");
                byte[] array = md.digest(md5);


                return array;
            } catch (java.security.NoSuchAlgorithmException e) {
            }
            return null;
        }


        // An replacement to the readExe function.
        public static byte[] readFileAsBinary(String path){
            File file = new File(path);
            int size = (int) file.length();
            byte[] bytes = new byte[size];
            try {
                BufferedInputStream buf = new BufferedInputStream(new FileInputStream(file));
                buf.read(bytes, 0, bytes.length);
                buf.close();
            } catch (FileNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            return bytes;
        }

        // Write a signature to a file in the internal storage directory in file called 'Signatures'
        //                                                                              initialized in FILENAME.
        public void  write_signatures_to_internal_storage(String signature) throws IOException {
            String FILENAME = getFilesDir()+"/Signatures";
            Context fileContext = null;
            FileOutputStream fos = fileContext.openFileOutput(FILENAME, fileContext.MODE_PRIVATE);
            fos.write(signature.getBytes());
            fos.close();
        }

        public static String toHex(byte[] bytes)
        {
            char[] HEX_DIGITS = "0123456789abcdef".toCharArray();

            char[] c = new char[bytes.length*2];

            int index = 0;
            for (byte b : bytes)
            {
                c[index++] = HEX_DIGITS[(b >> 4) & 0xf];
                c[index++] = HEX_DIGITS[b & 0xf];
            }
            return new String(c);
        }
            public void  create_list_of_dexFiles(String ending) throws IOException {
            String target_file = "";
            File folderToScan = getFilesDir();
            File[] listOfFiles = folderToScan.listFiles();
            for (int i = 0; i < listOfFiles.length; i++) {
                if (listOfFiles[i].isFile()) {
                    target_file = listOfFiles[i].getAbsolutePath();
                    if (target_file.endsWith("." + ending)) {
                        //check whether target_file product path with / or // . if / write script to change to //
                        byte[] exe_file_bytes = null;
                        String exe_location = target_file;
                        exe_file_bytes = readFileAsBinary(exe_location);
                        byte[] string_exe_file_bytes = exe_file_bytes;
                        Log.i("msg","-----------------------------------------");
                        //====================================================
                        //to add after the apk unziped and dex files are found.
                        //====================================================
                        //byte[] result = SHA256(string_exe_file_bytes);
                        //String HexResult = toHex(result);
                        //write_signatures_to_internal_storage(HexResult);
                    }
                }
            }
        }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_scan, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
